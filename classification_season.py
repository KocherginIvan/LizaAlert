# -*- coding: utf-8 -*-
"""Classification_Cold_Warm.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19iUPlL4y4MbxXLkY4kE-3AvsQ-Pz4uDT
"""
import torch
from PIL import Image
import torchvision.transforms as transforms


def classify_images(filename, model, label_mapping):
    try:
        transform = transforms.Compose([
            transforms.Resize((224, 224)),
            transforms.ToTensor(),
            transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
        ])
        if filename.endswith('.jpg') or filename.endswith('.png') or filename.endswith('.JPG'):
            # Загрузка и предобработка изображения
            #image_path = os.path.join(folder_path, filename)
            
            image = Image.open(filename)
            input_image = transform(image).unsqueeze(0)

            # Выполнение вывода
            with torch.no_grad():
                output = model(input_image)

            # Преобразование выходных вероятностей в предсказанный класс
            _, predicted = torch.max(output, 1)
            predicted_label = predicted.item()
            predicted_class_name = list(label_mapping.keys())[list(label_mapping.values()).index(predicted_label)]
    except:
        print('')
        # Вывод предсказанного имени класса для каждого изображения
        #print(f"Предсказанное имя класса для {filename}: {predicted_class_name}")
    return predicted_class_name
